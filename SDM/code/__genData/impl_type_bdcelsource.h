#ifndef ____BDCELSOURCE_H__
#define ____BDCELSOURCE_H__


#include "cstdint"






struct BDCELSource {
public:
	std::uint8_t EL_HighBeamCtrlSource;
	std::uint8_t EL_FLFogLightCtrlCmd;
	std::uint8_t EL_FRFogLightCtrlCmd;
	std::uint8_t EL_RearFogLightCtrlCmd;
	std::uint8_t EL_FrontFogLightCtrlSource;
	std::uint8_t EL_LeftDRLCtrlCmd;
	std::uint8_t EL_RightDRLCtrlCmd;
	std::uint8_t EL_LeftCornerLightCtrlCmd;
	std::uint8_t EL_RightCornerLightCtrlCmd;
	std::uint8_t EL_LicencePlateLightCtrlCmd;
	std::uint8_t EL_LeftPdLightCtrlCmd;
	std::uint8_t EL_RightPdLightCtrlCmd;
	std::uint8_t EL_PdLightCtrlSource;
	std::uint8_t EL_DRLCtrlSource;
	std::uint8_t EL_CornerLightCtrlSource;
	std::uint8_t EL_LicencePlateLightCtrlSource;
	std::uint8_t EL_LampOnWarningReq;
	std::uint8_t EL_FlasherCtrlSource;
	std::uint8_t EL_LeftTurnLightCtrlCmd;
	std::uint8_t EL_RightTurnLightCtrlCmd;
	std::uint8_t EL_FLTurnLightCtrlCmd;
	std::uint8_t EL_MLTurnLightCtrlCmd;
	std::uint8_t EL_RLTurnLightCtrlCmd;
	std::uint8_t EL_FRTurnLightCtrlCmd;
	std::uint8_t EL_MRTurnLightCtrlCmd;
	std::uint8_t EL_RRTurnLightCtrlCmd;
	std::uint8_t EL_HeadLightLevelAdjustCtrlSource;
	std::uint8_t EL_WelcomeLightMode;
	std::uint8_t EL_LightShowSt;
	std::uint16_t EL_LeftHeadLightAutoAdjustCmd;
	std::uint8_t EL_LeftHeadLightAutoAdjustCmdSt;
	std::uint8_t EL_AutoHighBeamCtrlSt;
	std::uint8_t EL_LightRunningMode;
	std::uint8_t EL_RightHeadLightAutoAdjustCmdSt;
	std::uint16_t EL_RightHeadLightAutoAdjustCmd;
	std::uint8_t EL_LeftHeadLightManulAdjustCmd;
	std::uint8_t EL_RightHeadLightManulAdjustCmd;
	std::uint8_t EL_NMExteriorLightKeepAwakeFlag;
	std::uint8_t EL_LeftBSDIndicatorCtrlCmd;
	std::uint8_t EL_RightBSDIndicatorCtrlCmd;
	std::uint8_t EL_ExtLightCtrlCmdVD;
	std::uint8_t EL_PositionLightSafetySt;
	std::uint8_t EL_LowBeamSafetySt;
	std::uint8_t EL_HighBeamSafetySt;
	std::uint8_t EL_TurnLightSafetySt;
	std::uint8_t EL_BrkLightSafetySt;
	std::uint8_t EL_HeadLightLevelingSWSt;
	std::uint8_t EL_LeftBSDIndicatorCtrlSource;
	std::uint8_t EL_RightBSDIndicatorCtrlSource;
/*
	BDCELSource() {}
	~BDCELSource() {}
	BDCELSource(const std::uint8_t _EL_HighBeamCtrlSource,const std::uint8_t _EL_FLFogLightCtrlCmd,const std::uint8_t _EL_FRFogLightCtrlCmd,const std::uint8_t _EL_RearFogLightCtrlCmd,const std::uint8_t _EL_FrontFogLightCtrlSource,const std::uint8_t _EL_LeftDRLCtrlCmd,const std::uint8_t _EL_RightDRLCtrlCmd,const std::uint8_t _EL_LeftCornerLightCtrlCmd,const std::uint8_t _EL_RightCornerLightCtrlCmd,const std::uint8_t _EL_LicencePlateLightCtrlCmd,const std::uint8_t _EL_LeftPdLightCtrlCmd,const std::uint8_t _EL_RightPdLightCtrlCmd,const std::uint8_t _EL_PdLightCtrlSource,const std::uint8_t _EL_DRLCtrlSource,const std::uint8_t _EL_CornerLightCtrlSource,const std::uint8_t _EL_LicencePlateLightCtrlSource,const std::uint8_t _EL_LampOnWarningReq,const std::uint8_t _EL_FlasherCtrlSource,const std::uint8_t _EL_LeftTurnLightCtrlCmd,const std::uint8_t _EL_RightTurnLightCtrlCmd,const std::uint8_t _EL_FLTurnLightCtrlCmd,const std::uint8_t _EL_MLTurnLightCtrlCmd,const std::uint8_t _EL_RLTurnLightCtrlCmd,const std::uint8_t _EL_FRTurnLightCtrlCmd,const std::uint8_t _EL_MRTurnLightCtrlCmd,const std::uint8_t _EL_RRTurnLightCtrlCmd,const std::uint8_t _EL_HeadLightLevelAdjustCtrlSource,const std::uint8_t _EL_WelcomeLightMode,const std::uint8_t _EL_LightShowSt,const std::uint16_t _EL_LeftHeadLightAutoAdjustCmd,const std::uint8_t _EL_LeftHeadLightAutoAdjustCmdSt,const std::uint8_t _EL_AutoHighBeamCtrlSt,const std::uint8_t _EL_LightRunningMode,const std::uint8_t _EL_RightHeadLightAutoAdjustCmdSt,const std::uint16_t _EL_RightHeadLightAutoAdjustCmd,const std::uint8_t _EL_LeftHeadLightManulAdjustCmd,const std::uint8_t _EL_RightHeadLightManulAdjustCmd,const std::uint8_t _EL_NMExteriorLightKeepAwakeFlag,const std::uint8_t _EL_LeftBSDIndicatorCtrlCmd,const std::uint8_t _EL_RightBSDIndicatorCtrlCmd,const std::uint8_t _EL_ExtLightCtrlCmdVD,const std::uint8_t _EL_PositionLightSafetySt,const std::uint8_t _EL_LowBeamSafetySt,const std::uint8_t _EL_HighBeamSafetySt,const std::uint8_t _EL_TurnLightSafetySt,const std::uint8_t _EL_BrkLightSafetySt,const std::uint8_t _EL_HeadLightLevelingSWSt,const std::uint8_t _EL_LeftBSDIndicatorCtrlSource,const std::uint8_t _EL_RightBSDIndicatorCtrlSource):EL_HighBeamCtrlSource(_EL_HighBeamCtrlSource),EL_FLFogLightCtrlCmd(_EL_FLFogLightCtrlCmd),EL_FRFogLightCtrlCmd(_EL_FRFogLightCtrlCmd),EL_RearFogLightCtrlCmd(_EL_RearFogLightCtrlCmd),EL_FrontFogLightCtrlSource(_EL_FrontFogLightCtrlSource),EL_LeftDRLCtrlCmd(_EL_LeftDRLCtrlCmd),EL_RightDRLCtrlCmd(_EL_RightDRLCtrlCmd),EL_LeftCornerLightCtrlCmd(_EL_LeftCornerLightCtrlCmd),EL_RightCornerLightCtrlCmd(_EL_RightCornerLightCtrlCmd),EL_LicencePlateLightCtrlCmd(_EL_LicencePlateLightCtrlCmd),EL_LeftPdLightCtrlCmd(_EL_LeftPdLightCtrlCmd),EL_RightPdLightCtrlCmd(_EL_RightPdLightCtrlCmd),EL_PdLightCtrlSource(_EL_PdLightCtrlSource),EL_DRLCtrlSource(_EL_DRLCtrlSource),EL_CornerLightCtrlSource(_EL_CornerLightCtrlSource),EL_LicencePlateLightCtrlSource(_EL_LicencePlateLightCtrlSource),EL_LampOnWarningReq(_EL_LampOnWarningReq),EL_FlasherCtrlSource(_EL_FlasherCtrlSource),EL_LeftTurnLightCtrlCmd(_EL_LeftTurnLightCtrlCmd),EL_RightTurnLightCtrlCmd(_EL_RightTurnLightCtrlCmd),EL_FLTurnLightCtrlCmd(_EL_FLTurnLightCtrlCmd),EL_MLTurnLightCtrlCmd(_EL_MLTurnLightCtrlCmd),EL_RLTurnLightCtrlCmd(_EL_RLTurnLightCtrlCmd),EL_FRTurnLightCtrlCmd(_EL_FRTurnLightCtrlCmd),EL_MRTurnLightCtrlCmd(_EL_MRTurnLightCtrlCmd),EL_RRTurnLightCtrlCmd(_EL_RRTurnLightCtrlCmd),EL_HeadLightLevelAdjustCtrlSource(_EL_HeadLightLevelAdjustCtrlSource),EL_WelcomeLightMode(_EL_WelcomeLightMode),EL_LightShowSt(_EL_LightShowSt),EL_LeftHeadLightAutoAdjustCmd(_EL_LeftHeadLightAutoAdjustCmd),EL_LeftHeadLightAutoAdjustCmdSt(_EL_LeftHeadLightAutoAdjustCmdSt),EL_AutoHighBeamCtrlSt(_EL_AutoHighBeamCtrlSt),EL_LightRunningMode(_EL_LightRunningMode),EL_RightHeadLightAutoAdjustCmdSt(_EL_RightHeadLightAutoAdjustCmdSt),EL_RightHeadLightAutoAdjustCmd(_EL_RightHeadLightAutoAdjustCmd),EL_LeftHeadLightManulAdjustCmd(_EL_LeftHeadLightManulAdjustCmd),EL_RightHeadLightManulAdjustCmd(_EL_RightHeadLightManulAdjustCmd),EL_NMExteriorLightKeepAwakeFlag(_EL_NMExteriorLightKeepAwakeFlag),EL_LeftBSDIndicatorCtrlCmd(_EL_LeftBSDIndicatorCtrlCmd),EL_RightBSDIndicatorCtrlCmd(_EL_RightBSDIndicatorCtrlCmd),EL_ExtLightCtrlCmdVD(_EL_ExtLightCtrlCmdVD),EL_PositionLightSafetySt(_EL_PositionLightSafetySt),EL_LowBeamSafetySt(_EL_LowBeamSafetySt),EL_HighBeamSafetySt(_EL_HighBeamSafetySt),EL_TurnLightSafetySt(_EL_TurnLightSafetySt),EL_BrkLightSafetySt(_EL_BrkLightSafetySt),EL_HeadLightLevelingSWSt(_EL_HeadLightLevelingSWSt),EL_LeftBSDIndicatorCtrlSource(_EL_LeftBSDIndicatorCtrlSource),EL_RightBSDIndicatorCtrlSource(_EL_RightBSDIndicatorCtrlSource) {}
	BDCELSource(const BDCELSource &_x){
		EL_HighBeamCtrlSource = _x.EL_HighBeamCtrlSource;
		EL_FLFogLightCtrlCmd = _x.EL_FLFogLightCtrlCmd;
		EL_FRFogLightCtrlCmd = _x.EL_FRFogLightCtrlCmd;
		EL_RearFogLightCtrlCmd = _x.EL_RearFogLightCtrlCmd;
		EL_FrontFogLightCtrlSource = _x.EL_FrontFogLightCtrlSource;
		EL_LeftDRLCtrlCmd = _x.EL_LeftDRLCtrlCmd;
		EL_RightDRLCtrlCmd = _x.EL_RightDRLCtrlCmd;
		EL_LeftCornerLightCtrlCmd = _x.EL_LeftCornerLightCtrlCmd;
		EL_RightCornerLightCtrlCmd = _x.EL_RightCornerLightCtrlCmd;
		EL_LicencePlateLightCtrlCmd = _x.EL_LicencePlateLightCtrlCmd;
		EL_LeftPdLightCtrlCmd = _x.EL_LeftPdLightCtrlCmd;
		EL_RightPdLightCtrlCmd = _x.EL_RightPdLightCtrlCmd;
		EL_PdLightCtrlSource = _x.EL_PdLightCtrlSource;
		EL_DRLCtrlSource = _x.EL_DRLCtrlSource;
		EL_CornerLightCtrlSource = _x.EL_CornerLightCtrlSource;
		EL_LicencePlateLightCtrlSource = _x.EL_LicencePlateLightCtrlSource;
		EL_LampOnWarningReq = _x.EL_LampOnWarningReq;
		EL_FlasherCtrlSource = _x.EL_FlasherCtrlSource;
		EL_LeftTurnLightCtrlCmd = _x.EL_LeftTurnLightCtrlCmd;
		EL_RightTurnLightCtrlCmd = _x.EL_RightTurnLightCtrlCmd;
		EL_FLTurnLightCtrlCmd = _x.EL_FLTurnLightCtrlCmd;
		EL_MLTurnLightCtrlCmd = _x.EL_MLTurnLightCtrlCmd;
		EL_RLTurnLightCtrlCmd = _x.EL_RLTurnLightCtrlCmd;
		EL_FRTurnLightCtrlCmd = _x.EL_FRTurnLightCtrlCmd;
		EL_MRTurnLightCtrlCmd = _x.EL_MRTurnLightCtrlCmd;
		EL_RRTurnLightCtrlCmd = _x.EL_RRTurnLightCtrlCmd;
		EL_HeadLightLevelAdjustCtrlSource = _x.EL_HeadLightLevelAdjustCtrlSource;
		EL_WelcomeLightMode = _x.EL_WelcomeLightMode;
		EL_LightShowSt = _x.EL_LightShowSt;
		EL_LeftHeadLightAutoAdjustCmd = _x.EL_LeftHeadLightAutoAdjustCmd;
		EL_LeftHeadLightAutoAdjustCmdSt = _x.EL_LeftHeadLightAutoAdjustCmdSt;
		EL_AutoHighBeamCtrlSt = _x.EL_AutoHighBeamCtrlSt;
		EL_LightRunningMode = _x.EL_LightRunningMode;
		EL_RightHeadLightAutoAdjustCmdSt = _x.EL_RightHeadLightAutoAdjustCmdSt;
		EL_RightHeadLightAutoAdjustCmd = _x.EL_RightHeadLightAutoAdjustCmd;
		EL_LeftHeadLightManulAdjustCmd = _x.EL_LeftHeadLightManulAdjustCmd;
		EL_RightHeadLightManulAdjustCmd = _x.EL_RightHeadLightManulAdjustCmd;
		EL_NMExteriorLightKeepAwakeFlag = _x.EL_NMExteriorLightKeepAwakeFlag;
		EL_LeftBSDIndicatorCtrlCmd = _x.EL_LeftBSDIndicatorCtrlCmd;
		EL_RightBSDIndicatorCtrlCmd = _x.EL_RightBSDIndicatorCtrlCmd;
		EL_ExtLightCtrlCmdVD = _x.EL_ExtLightCtrlCmdVD;
		EL_PositionLightSafetySt = _x.EL_PositionLightSafetySt;
		EL_LowBeamSafetySt = _x.EL_LowBeamSafetySt;
		EL_HighBeamSafetySt = _x.EL_HighBeamSafetySt;
		EL_TurnLightSafetySt = _x.EL_TurnLightSafetySt;
		EL_BrkLightSafetySt = _x.EL_BrkLightSafetySt;
		EL_HeadLightLevelingSWSt = _x.EL_HeadLightLevelingSWSt;
		EL_LeftBSDIndicatorCtrlSource = _x.EL_LeftBSDIndicatorCtrlSource;
		EL_RightBSDIndicatorCtrlSource = _x.EL_RightBSDIndicatorCtrlSource;
	}
	BDCELSource(BDCELSource &&_x){
		EL_HighBeamCtrlSource = std::move(_x.EL_HighBeamCtrlSource);
		EL_FLFogLightCtrlCmd = std::move(_x.EL_FLFogLightCtrlCmd);
		EL_FRFogLightCtrlCmd = std::move(_x.EL_FRFogLightCtrlCmd);
		EL_RearFogLightCtrlCmd = std::move(_x.EL_RearFogLightCtrlCmd);
		EL_FrontFogLightCtrlSource = std::move(_x.EL_FrontFogLightCtrlSource);
		EL_LeftDRLCtrlCmd = std::move(_x.EL_LeftDRLCtrlCmd);
		EL_RightDRLCtrlCmd = std::move(_x.EL_RightDRLCtrlCmd);
		EL_LeftCornerLightCtrlCmd = std::move(_x.EL_LeftCornerLightCtrlCmd);
		EL_RightCornerLightCtrlCmd = std::move(_x.EL_RightCornerLightCtrlCmd);
		EL_LicencePlateLightCtrlCmd = std::move(_x.EL_LicencePlateLightCtrlCmd);
		EL_LeftPdLightCtrlCmd = std::move(_x.EL_LeftPdLightCtrlCmd);
		EL_RightPdLightCtrlCmd = std::move(_x.EL_RightPdLightCtrlCmd);
		EL_PdLightCtrlSource = std::move(_x.EL_PdLightCtrlSource);
		EL_DRLCtrlSource = std::move(_x.EL_DRLCtrlSource);
		EL_CornerLightCtrlSource = std::move(_x.EL_CornerLightCtrlSource);
		EL_LicencePlateLightCtrlSource = std::move(_x.EL_LicencePlateLightCtrlSource);
		EL_LampOnWarningReq = std::move(_x.EL_LampOnWarningReq);
		EL_FlasherCtrlSource = std::move(_x.EL_FlasherCtrlSource);
		EL_LeftTurnLightCtrlCmd = std::move(_x.EL_LeftTurnLightCtrlCmd);
		EL_RightTurnLightCtrlCmd = std::move(_x.EL_RightTurnLightCtrlCmd);
		EL_FLTurnLightCtrlCmd = std::move(_x.EL_FLTurnLightCtrlCmd);
		EL_MLTurnLightCtrlCmd = std::move(_x.EL_MLTurnLightCtrlCmd);
		EL_RLTurnLightCtrlCmd = std::move(_x.EL_RLTurnLightCtrlCmd);
		EL_FRTurnLightCtrlCmd = std::move(_x.EL_FRTurnLightCtrlCmd);
		EL_MRTurnLightCtrlCmd = std::move(_x.EL_MRTurnLightCtrlCmd);
		EL_RRTurnLightCtrlCmd = std::move(_x.EL_RRTurnLightCtrlCmd);
		EL_HeadLightLevelAdjustCtrlSource = std::move(_x.EL_HeadLightLevelAdjustCtrlSource);
		EL_WelcomeLightMode = std::move(_x.EL_WelcomeLightMode);
		EL_LightShowSt = std::move(_x.EL_LightShowSt);
		EL_LeftHeadLightAutoAdjustCmd = std::move(_x.EL_LeftHeadLightAutoAdjustCmd);
		EL_LeftHeadLightAutoAdjustCmdSt = std::move(_x.EL_LeftHeadLightAutoAdjustCmdSt);
		EL_AutoHighBeamCtrlSt = std::move(_x.EL_AutoHighBeamCtrlSt);
		EL_LightRunningMode = std::move(_x.EL_LightRunningMode);
		EL_RightHeadLightAutoAdjustCmdSt = std::move(_x.EL_RightHeadLightAutoAdjustCmdSt);
		EL_RightHeadLightAutoAdjustCmd = std::move(_x.EL_RightHeadLightAutoAdjustCmd);
		EL_LeftHeadLightManulAdjustCmd = std::move(_x.EL_LeftHeadLightManulAdjustCmd);
		EL_RightHeadLightManulAdjustCmd = std::move(_x.EL_RightHeadLightManulAdjustCmd);
		EL_NMExteriorLightKeepAwakeFlag = std::move(_x.EL_NMExteriorLightKeepAwakeFlag);
		EL_LeftBSDIndicatorCtrlCmd = std::move(_x.EL_LeftBSDIndicatorCtrlCmd);
		EL_RightBSDIndicatorCtrlCmd = std::move(_x.EL_RightBSDIndicatorCtrlCmd);
		EL_ExtLightCtrlCmdVD = std::move(_x.EL_ExtLightCtrlCmdVD);
		EL_PositionLightSafetySt = std::move(_x.EL_PositionLightSafetySt);
		EL_LowBeamSafetySt = std::move(_x.EL_LowBeamSafetySt);
		EL_HighBeamSafetySt = std::move(_x.EL_HighBeamSafetySt);
		EL_TurnLightSafetySt = std::move(_x.EL_TurnLightSafetySt);
		EL_BrkLightSafetySt = std::move(_x.EL_BrkLightSafetySt);
		EL_HeadLightLevelingSWSt = std::move(_x.EL_HeadLightLevelingSWSt);
		EL_LeftBSDIndicatorCtrlSource = std::move(_x.EL_LeftBSDIndicatorCtrlSource);
		EL_RightBSDIndicatorCtrlSource = std::move(_x.EL_RightBSDIndicatorCtrlSource);
	}
	BDCELSource& operator=(const BDCELSource &_x){
		EL_HighBeamCtrlSource = _x.EL_HighBeamCtrlSource;
		EL_FLFogLightCtrlCmd = _x.EL_FLFogLightCtrlCmd;
		EL_FRFogLightCtrlCmd = _x.EL_FRFogLightCtrlCmd;
		EL_RearFogLightCtrlCmd = _x.EL_RearFogLightCtrlCmd;
		EL_FrontFogLightCtrlSource = _x.EL_FrontFogLightCtrlSource;
		EL_LeftDRLCtrlCmd = _x.EL_LeftDRLCtrlCmd;
		EL_RightDRLCtrlCmd = _x.EL_RightDRLCtrlCmd;
		EL_LeftCornerLightCtrlCmd = _x.EL_LeftCornerLightCtrlCmd;
		EL_RightCornerLightCtrlCmd = _x.EL_RightCornerLightCtrlCmd;
		EL_LicencePlateLightCtrlCmd = _x.EL_LicencePlateLightCtrlCmd;
		EL_LeftPdLightCtrlCmd = _x.EL_LeftPdLightCtrlCmd;
		EL_RightPdLightCtrlCmd = _x.EL_RightPdLightCtrlCmd;
		EL_PdLightCtrlSource = _x.EL_PdLightCtrlSource;
		EL_DRLCtrlSource = _x.EL_DRLCtrlSource;
		EL_CornerLightCtrlSource = _x.EL_CornerLightCtrlSource;
		EL_LicencePlateLightCtrlSource = _x.EL_LicencePlateLightCtrlSource;
		EL_LampOnWarningReq = _x.EL_LampOnWarningReq;
		EL_FlasherCtrlSource = _x.EL_FlasherCtrlSource;
		EL_LeftTurnLightCtrlCmd = _x.EL_LeftTurnLightCtrlCmd;
		EL_RightTurnLightCtrlCmd = _x.EL_RightTurnLightCtrlCmd;
		EL_FLTurnLightCtrlCmd = _x.EL_FLTurnLightCtrlCmd;
		EL_MLTurnLightCtrlCmd = _x.EL_MLTurnLightCtrlCmd;
		EL_RLTurnLightCtrlCmd = _x.EL_RLTurnLightCtrlCmd;
		EL_FRTurnLightCtrlCmd = _x.EL_FRTurnLightCtrlCmd;
		EL_MRTurnLightCtrlCmd = _x.EL_MRTurnLightCtrlCmd;
		EL_RRTurnLightCtrlCmd = _x.EL_RRTurnLightCtrlCmd;
		EL_HeadLightLevelAdjustCtrlSource = _x.EL_HeadLightLevelAdjustCtrlSource;
		EL_WelcomeLightMode = _x.EL_WelcomeLightMode;
		EL_LightShowSt = _x.EL_LightShowSt;
		EL_LeftHeadLightAutoAdjustCmd = _x.EL_LeftHeadLightAutoAdjustCmd;
		EL_LeftHeadLightAutoAdjustCmdSt = _x.EL_LeftHeadLightAutoAdjustCmdSt;
		EL_AutoHighBeamCtrlSt = _x.EL_AutoHighBeamCtrlSt;
		EL_LightRunningMode = _x.EL_LightRunningMode;
		EL_RightHeadLightAutoAdjustCmdSt = _x.EL_RightHeadLightAutoAdjustCmdSt;
		EL_RightHeadLightAutoAdjustCmd = _x.EL_RightHeadLightAutoAdjustCmd;
		EL_LeftHeadLightManulAdjustCmd = _x.EL_LeftHeadLightManulAdjustCmd;
		EL_RightHeadLightManulAdjustCmd = _x.EL_RightHeadLightManulAdjustCmd;
		EL_NMExteriorLightKeepAwakeFlag = _x.EL_NMExteriorLightKeepAwakeFlag;
		EL_LeftBSDIndicatorCtrlCmd = _x.EL_LeftBSDIndicatorCtrlCmd;
		EL_RightBSDIndicatorCtrlCmd = _x.EL_RightBSDIndicatorCtrlCmd;
		EL_ExtLightCtrlCmdVD = _x.EL_ExtLightCtrlCmdVD;
		EL_PositionLightSafetySt = _x.EL_PositionLightSafetySt;
		EL_LowBeamSafetySt = _x.EL_LowBeamSafetySt;
		EL_HighBeamSafetySt = _x.EL_HighBeamSafetySt;
		EL_TurnLightSafetySt = _x.EL_TurnLightSafetySt;
		EL_BrkLightSafetySt = _x.EL_BrkLightSafetySt;
		EL_HeadLightLevelingSWSt = _x.EL_HeadLightLevelingSWSt;
		EL_LeftBSDIndicatorCtrlSource = _x.EL_LeftBSDIndicatorCtrlSource;
		EL_RightBSDIndicatorCtrlSource = _x.EL_RightBSDIndicatorCtrlSource;
		return *this;
	}
	BDCELSource& operator=(BDCELSource &&_x){
		EL_HighBeamCtrlSource = std::move(_x.EL_HighBeamCtrlSource);
		EL_FLFogLightCtrlCmd = std::move(_x.EL_FLFogLightCtrlCmd);
		EL_FRFogLightCtrlCmd = std::move(_x.EL_FRFogLightCtrlCmd);
		EL_RearFogLightCtrlCmd = std::move(_x.EL_RearFogLightCtrlCmd);
		EL_FrontFogLightCtrlSource = std::move(_x.EL_FrontFogLightCtrlSource);
		EL_LeftDRLCtrlCmd = std::move(_x.EL_LeftDRLCtrlCmd);
		EL_RightDRLCtrlCmd = std::move(_x.EL_RightDRLCtrlCmd);
		EL_LeftCornerLightCtrlCmd = std::move(_x.EL_LeftCornerLightCtrlCmd);
		EL_RightCornerLightCtrlCmd = std::move(_x.EL_RightCornerLightCtrlCmd);
		EL_LicencePlateLightCtrlCmd = std::move(_x.EL_LicencePlateLightCtrlCmd);
		EL_LeftPdLightCtrlCmd = std::move(_x.EL_LeftPdLightCtrlCmd);
		EL_RightPdLightCtrlCmd = std::move(_x.EL_RightPdLightCtrlCmd);
		EL_PdLightCtrlSource = std::move(_x.EL_PdLightCtrlSource);
		EL_DRLCtrlSource = std::move(_x.EL_DRLCtrlSource);
		EL_CornerLightCtrlSource = std::move(_x.EL_CornerLightCtrlSource);
		EL_LicencePlateLightCtrlSource = std::move(_x.EL_LicencePlateLightCtrlSource);
		EL_LampOnWarningReq = std::move(_x.EL_LampOnWarningReq);
		EL_FlasherCtrlSource = std::move(_x.EL_FlasherCtrlSource);
		EL_LeftTurnLightCtrlCmd = std::move(_x.EL_LeftTurnLightCtrlCmd);
		EL_RightTurnLightCtrlCmd = std::move(_x.EL_RightTurnLightCtrlCmd);
		EL_FLTurnLightCtrlCmd = std::move(_x.EL_FLTurnLightCtrlCmd);
		EL_MLTurnLightCtrlCmd = std::move(_x.EL_MLTurnLightCtrlCmd);
		EL_RLTurnLightCtrlCmd = std::move(_x.EL_RLTurnLightCtrlCmd);
		EL_FRTurnLightCtrlCmd = std::move(_x.EL_FRTurnLightCtrlCmd);
		EL_MRTurnLightCtrlCmd = std::move(_x.EL_MRTurnLightCtrlCmd);
		EL_RRTurnLightCtrlCmd = std::move(_x.EL_RRTurnLightCtrlCmd);
		EL_HeadLightLevelAdjustCtrlSource = std::move(_x.EL_HeadLightLevelAdjustCtrlSource);
		EL_WelcomeLightMode = std::move(_x.EL_WelcomeLightMode);
		EL_LightShowSt = std::move(_x.EL_LightShowSt);
		EL_LeftHeadLightAutoAdjustCmd = std::move(_x.EL_LeftHeadLightAutoAdjustCmd);
		EL_LeftHeadLightAutoAdjustCmdSt = std::move(_x.EL_LeftHeadLightAutoAdjustCmdSt);
		EL_AutoHighBeamCtrlSt = std::move(_x.EL_AutoHighBeamCtrlSt);
		EL_LightRunningMode = std::move(_x.EL_LightRunningMode);
		EL_RightHeadLightAutoAdjustCmdSt = std::move(_x.EL_RightHeadLightAutoAdjustCmdSt);
		EL_RightHeadLightAutoAdjustCmd = std::move(_x.EL_RightHeadLightAutoAdjustCmd);
		EL_LeftHeadLightManulAdjustCmd = std::move(_x.EL_LeftHeadLightManulAdjustCmd);
		EL_RightHeadLightManulAdjustCmd = std::move(_x.EL_RightHeadLightManulAdjustCmd);
		EL_NMExteriorLightKeepAwakeFlag = std::move(_x.EL_NMExteriorLightKeepAwakeFlag);
		EL_LeftBSDIndicatorCtrlCmd = std::move(_x.EL_LeftBSDIndicatorCtrlCmd);
		EL_RightBSDIndicatorCtrlCmd = std::move(_x.EL_RightBSDIndicatorCtrlCmd);
		EL_ExtLightCtrlCmdVD = std::move(_x.EL_ExtLightCtrlCmdVD);
		EL_PositionLightSafetySt = std::move(_x.EL_PositionLightSafetySt);
		EL_LowBeamSafetySt = std::move(_x.EL_LowBeamSafetySt);
		EL_HighBeamSafetySt = std::move(_x.EL_HighBeamSafetySt);
		EL_TurnLightSafetySt = std::move(_x.EL_TurnLightSafetySt);
		EL_BrkLightSafetySt = std::move(_x.EL_BrkLightSafetySt);
		EL_HeadLightLevelingSWSt = std::move(_x.EL_HeadLightLevelingSWSt);
		EL_LeftBSDIndicatorCtrlSource = std::move(_x.EL_LeftBSDIndicatorCtrlSource);
		EL_RightBSDIndicatorCtrlSource = std::move(_x.EL_RightBSDIndicatorCtrlSource);
		return *this;
	}
*/

	using IsEnumerableTag = void;
	template<typename F>
	void enumerate(F& fun) {
		fun(EL_HighBeamCtrlSource);
		fun(EL_FLFogLightCtrlCmd);
		fun(EL_FRFogLightCtrlCmd);
		fun(EL_RearFogLightCtrlCmd);
		fun(EL_FrontFogLightCtrlSource);
		fun(EL_LeftDRLCtrlCmd);
		fun(EL_RightDRLCtrlCmd);
		fun(EL_LeftCornerLightCtrlCmd);
		fun(EL_RightCornerLightCtrlCmd);
		fun(EL_LicencePlateLightCtrlCmd);
		fun(EL_LeftPdLightCtrlCmd);
		fun(EL_RightPdLightCtrlCmd);
		fun(EL_PdLightCtrlSource);
		fun(EL_DRLCtrlSource);
		fun(EL_CornerLightCtrlSource);
		fun(EL_LicencePlateLightCtrlSource);
		fun(EL_LampOnWarningReq);
		fun(EL_FlasherCtrlSource);
		fun(EL_LeftTurnLightCtrlCmd);
		fun(EL_RightTurnLightCtrlCmd);
		fun(EL_FLTurnLightCtrlCmd);
		fun(EL_MLTurnLightCtrlCmd);
		fun(EL_RLTurnLightCtrlCmd);
		fun(EL_FRTurnLightCtrlCmd);
		fun(EL_MRTurnLightCtrlCmd);
		fun(EL_RRTurnLightCtrlCmd);
		fun(EL_HeadLightLevelAdjustCtrlSource);
		fun(EL_WelcomeLightMode);
		fun(EL_LightShowSt);
		fun(EL_LeftHeadLightAutoAdjustCmd);
		fun(EL_LeftHeadLightAutoAdjustCmdSt);
		fun(EL_AutoHighBeamCtrlSt);
		fun(EL_LightRunningMode);
		fun(EL_RightHeadLightAutoAdjustCmdSt);
		fun(EL_RightHeadLightAutoAdjustCmd);
		fun(EL_LeftHeadLightManulAdjustCmd);
		fun(EL_RightHeadLightManulAdjustCmd);
		fun(EL_NMExteriorLightKeepAwakeFlag);
		fun(EL_LeftBSDIndicatorCtrlCmd);
		fun(EL_RightBSDIndicatorCtrlCmd);
		fun(EL_ExtLightCtrlCmdVD);
		fun(EL_PositionLightSafetySt);
		fun(EL_LowBeamSafetySt);
		fun(EL_HighBeamSafetySt);
		fun(EL_TurnLightSafetySt);
		fun(EL_BrkLightSafetySt);
		fun(EL_HeadLightLevelingSWSt);
		fun(EL_LeftBSDIndicatorCtrlSource);
		fun(EL_RightBSDIndicatorCtrlSource);
	}

	template<typename F>
	void GetSize(F& fun) const{
		fun(EL_HighBeamCtrlSource);
		fun(EL_FLFogLightCtrlCmd);
		fun(EL_FRFogLightCtrlCmd);
		fun(EL_RearFogLightCtrlCmd);
		fun(EL_FrontFogLightCtrlSource);
		fun(EL_LeftDRLCtrlCmd);
		fun(EL_RightDRLCtrlCmd);
		fun(EL_LeftCornerLightCtrlCmd);
		fun(EL_RightCornerLightCtrlCmd);
		fun(EL_LicencePlateLightCtrlCmd);
		fun(EL_LeftPdLightCtrlCmd);
		fun(EL_RightPdLightCtrlCmd);
		fun(EL_PdLightCtrlSource);
		fun(EL_DRLCtrlSource);
		fun(EL_CornerLightCtrlSource);
		fun(EL_LicencePlateLightCtrlSource);
		fun(EL_LampOnWarningReq);
		fun(EL_FlasherCtrlSource);
		fun(EL_LeftTurnLightCtrlCmd);
		fun(EL_RightTurnLightCtrlCmd);
		fun(EL_FLTurnLightCtrlCmd);
		fun(EL_MLTurnLightCtrlCmd);
		fun(EL_RLTurnLightCtrlCmd);
		fun(EL_FRTurnLightCtrlCmd);
		fun(EL_MRTurnLightCtrlCmd);
		fun(EL_RRTurnLightCtrlCmd);
		fun(EL_HeadLightLevelAdjustCtrlSource);
		fun(EL_WelcomeLightMode);
		fun(EL_LightShowSt);
		fun(EL_LeftHeadLightAutoAdjustCmd);
		fun(EL_LeftHeadLightAutoAdjustCmdSt);
		fun(EL_AutoHighBeamCtrlSt);
		fun(EL_LightRunningMode);
		fun(EL_RightHeadLightAutoAdjustCmdSt);
		fun(EL_RightHeadLightAutoAdjustCmd);
		fun(EL_LeftHeadLightManulAdjustCmd);
		fun(EL_RightHeadLightManulAdjustCmd);
		fun(EL_NMExteriorLightKeepAwakeFlag);
		fun(EL_LeftBSDIndicatorCtrlCmd);
		fun(EL_RightBSDIndicatorCtrlCmd);
		fun(EL_ExtLightCtrlCmdVD);
		fun(EL_PositionLightSafetySt);
		fun(EL_LowBeamSafetySt);
		fun(EL_HighBeamSafetySt);
		fun(EL_TurnLightSafetySt);
		fun(EL_BrkLightSafetySt);
		fun(EL_HeadLightLevelingSWSt);
		fun(EL_LeftBSDIndicatorCtrlSource);
		fun(EL_RightBSDIndicatorCtrlSource);
	}
	template<typename F>
	void serialize(F& fun) const{
		fun << (EL_HighBeamCtrlSource);
		fun << (EL_FLFogLightCtrlCmd);
		fun << (EL_FRFogLightCtrlCmd);
		fun << (EL_RearFogLightCtrlCmd);
		fun << (EL_FrontFogLightCtrlSource);
		fun << (EL_LeftDRLCtrlCmd);
		fun << (EL_RightDRLCtrlCmd);
		fun << (EL_LeftCornerLightCtrlCmd);
		fun << (EL_RightCornerLightCtrlCmd);
		fun << (EL_LicencePlateLightCtrlCmd);
		fun << (EL_LeftPdLightCtrlCmd);
		fun << (EL_RightPdLightCtrlCmd);
		fun << (EL_PdLightCtrlSource);
		fun << (EL_DRLCtrlSource);
		fun << (EL_CornerLightCtrlSource);
		fun << (EL_LicencePlateLightCtrlSource);
		fun << (EL_LampOnWarningReq);
		fun << (EL_FlasherCtrlSource);
		fun << (EL_LeftTurnLightCtrlCmd);
		fun << (EL_RightTurnLightCtrlCmd);
		fun << (EL_FLTurnLightCtrlCmd);
		fun << (EL_MLTurnLightCtrlCmd);
		fun << (EL_RLTurnLightCtrlCmd);
		fun << (EL_FRTurnLightCtrlCmd);
		fun << (EL_MRTurnLightCtrlCmd);
		fun << (EL_RRTurnLightCtrlCmd);
		fun << (EL_HeadLightLevelAdjustCtrlSource);
		fun << (EL_WelcomeLightMode);
		fun << (EL_LightShowSt);
		fun << (EL_LeftHeadLightAutoAdjustCmd);
		fun << (EL_LeftHeadLightAutoAdjustCmdSt);
		fun << (EL_AutoHighBeamCtrlSt);
		fun << (EL_LightRunningMode);
		fun << (EL_RightHeadLightAutoAdjustCmdSt);
		fun << (EL_RightHeadLightAutoAdjustCmd);
		fun << (EL_LeftHeadLightManulAdjustCmd);
		fun << (EL_RightHeadLightManulAdjustCmd);
		fun << (EL_NMExteriorLightKeepAwakeFlag);
		fun << (EL_LeftBSDIndicatorCtrlCmd);
		fun << (EL_RightBSDIndicatorCtrlCmd);
		fun << (EL_ExtLightCtrlCmdVD);
		fun << (EL_PositionLightSafetySt);
		fun << (EL_LowBeamSafetySt);
		fun << (EL_HighBeamSafetySt);
		fun << (EL_TurnLightSafetySt);
		fun << (EL_BrkLightSafetySt);
		fun << (EL_HeadLightLevelingSWSt);
		fun << (EL_LeftBSDIndicatorCtrlSource);
		fun << (EL_RightBSDIndicatorCtrlSource);
	}
	template<typename F>
	void deserialize(F& fun){
		fun >> (EL_HighBeamCtrlSource);
		fun >> (EL_FLFogLightCtrlCmd);
		fun >> (EL_FRFogLightCtrlCmd);
		fun >> (EL_RearFogLightCtrlCmd);
		fun >> (EL_FrontFogLightCtrlSource);
		fun >> (EL_LeftDRLCtrlCmd);
		fun >> (EL_RightDRLCtrlCmd);
		fun >> (EL_LeftCornerLightCtrlCmd);
		fun >> (EL_RightCornerLightCtrlCmd);
		fun >> (EL_LicencePlateLightCtrlCmd);
		fun >> (EL_LeftPdLightCtrlCmd);
		fun >> (EL_RightPdLightCtrlCmd);
		fun >> (EL_PdLightCtrlSource);
		fun >> (EL_DRLCtrlSource);
		fun >> (EL_CornerLightCtrlSource);
		fun >> (EL_LicencePlateLightCtrlSource);
		fun >> (EL_LampOnWarningReq);
		fun >> (EL_FlasherCtrlSource);
		fun >> (EL_LeftTurnLightCtrlCmd);
		fun >> (EL_RightTurnLightCtrlCmd);
		fun >> (EL_FLTurnLightCtrlCmd);
		fun >> (EL_MLTurnLightCtrlCmd);
		fun >> (EL_RLTurnLightCtrlCmd);
		fun >> (EL_FRTurnLightCtrlCmd);
		fun >> (EL_MRTurnLightCtrlCmd);
		fun >> (EL_RRTurnLightCtrlCmd);
		fun >> (EL_HeadLightLevelAdjustCtrlSource);
		fun >> (EL_WelcomeLightMode);
		fun >> (EL_LightShowSt);
		fun >> (EL_LeftHeadLightAutoAdjustCmd);
		fun >> (EL_LeftHeadLightAutoAdjustCmdSt);
		fun >> (EL_AutoHighBeamCtrlSt);
		fun >> (EL_LightRunningMode);
		fun >> (EL_RightHeadLightAutoAdjustCmdSt);
		fun >> (EL_RightHeadLightAutoAdjustCmd);
		fun >> (EL_LeftHeadLightManulAdjustCmd);
		fun >> (EL_RightHeadLightManulAdjustCmd);
		fun >> (EL_NMExteriorLightKeepAwakeFlag);
		fun >> (EL_LeftBSDIndicatorCtrlCmd);
		fun >> (EL_RightBSDIndicatorCtrlCmd);
		fun >> (EL_ExtLightCtrlCmdVD);
		fun >> (EL_PositionLightSafetySt);
		fun >> (EL_LowBeamSafetySt);
		fun >> (EL_HighBeamSafetySt);
		fun >> (EL_TurnLightSafetySt);
		fun >> (EL_BrkLightSafetySt);
		fun >> (EL_HeadLightLevelingSWSt);
		fun >> (EL_LeftBSDIndicatorCtrlSource);
		fun >> (EL_RightBSDIndicatorCtrlSource);
	}
};

#endif //____BDCELSOURCE_H__
