#ifndef ____BDCTESTEMS1_H__
#define ____BDCTESTEMS1_H__


#include "cstdint"






struct BDCTestEMS1 {
public:
	std::uint8_t EMS_BattVoltVD;
	std::uint8_t EMS_BattVolt;
	std::uint8_t EMS_CatalyticIgnitionSt;
	std::uint16_t EMS_ClutchTorqDriverReq;
	std::uint8_t EMS_ClutchTorqDriverReqVD;
	std::uint32_t EMS_DFCPcode;
	std::uint8_t EMS_DFCPcodeSt;
	std::uint8_t EMS_DriverPowerReq;
	std::uint8_t EMS_DriverPowerReqProtValue;
	std::uint8_t EMS_DrvMode;
	std::uint8_t EMS_EngOilPres;
	std::uint8_t EMS_EngIgnAngle;
	std::uint8_t EMS_EngExhaustTemp;
	std::uint8_t EMS_EngCrankSt;
	std::uint8_t EMS_FuelRailPrVD;
	std::uint8_t EMS_FuelRailPr;
	std::uint8_t EMS_IUPRGenInh;
	std::uint8_t EMS_IURPGenDen;
	std::uint8_t EMS_IUPRIgCnt;
	std::uint8_t EMS_IntakeMafldPres;
	std::uint8_t EMS_OBDDrivingCycleSt;
	std::uint8_t EMS_MotronicSigRec;
	std::uint8_t EMS_CatalystHeatingAct;
	std::uint8_t EMS_EngRunningTime;
	std::uint8_t EMS_EWPLightSt;
	std::uint8_t EMS_EngFuelCutOff;
	std::uint8_t EMS_EngFuelCutOffStandby;
	std::uint8_t EMS_EngStrtReq;
	std::uint8_t EMS_EngStForPHEV;
	std::uint8_t EMS_FaultrankSig;
	std::uint8_t EMS_GPFSrvRgnReq;
	std::uint8_t EMS_GPFRgnSt;
	std::uint8_t EMS_IdlectrlActive;
	std::uint8_t EMS_InitFuelMode;
	std::uint8_t EMS_MaxSetTrq;
	std::uint8_t EMS_MinSetTrq;
	std::uint8_t EMS_StartEnd;
	std::uint8_t EMS_TEVDiagCondReq;
	std::uint8_t EMS_VCUHTMSWaterPumpSpdReq;
	std::uint8_t EMS_WarmupSt;
	std::uint8_t EMS_WarmCycleCnt;
	std::uint8_t EMS_PCVHSDCtrl;
	std::uint8_t EMS_PCVHSDCtrlVD;
	std::uint8_t EMS_HSDSTRLCtrlReq;
	std::uint8_t EMS_LIN1maxErr;
	std::uint8_t EMS_LINGENminErr;
	std::uint8_t EMS_LINGENsigErr;
/*
	BDCTestEMS1() {}
	~BDCTestEMS1() {}
	BDCTestEMS1(const std::uint8_t _EMS_BattVoltVD,const std::uint8_t _EMS_BattVolt,const std::uint8_t _EMS_CatalyticIgnitionSt,const std::uint16_t _EMS_ClutchTorqDriverReq,const std::uint8_t _EMS_ClutchTorqDriverReqVD,const std::uint32_t _EMS_DFCPcode,const std::uint8_t _EMS_DFCPcodeSt,const std::uint8_t _EMS_DriverPowerReq,const std::uint8_t _EMS_DriverPowerReqProtValue,const std::uint8_t _EMS_DrvMode,const std::uint8_t _EMS_EngOilPres,const std::uint8_t _EMS_EngIgnAngle,const std::uint8_t _EMS_EngExhaustTemp,const std::uint8_t _EMS_EngCrankSt,const std::uint8_t _EMS_FuelRailPrVD,const std::uint8_t _EMS_FuelRailPr,const std::uint8_t _EMS_IUPRGenInh,const std::uint8_t _EMS_IURPGenDen,const std::uint8_t _EMS_IUPRIgCnt,const std::uint8_t _EMS_IntakeMafldPres,const std::uint8_t _EMS_OBDDrivingCycleSt,const std::uint8_t _EMS_MotronicSigRec,const std::uint8_t _EMS_CatalystHeatingAct,const std::uint8_t _EMS_EngRunningTime,const std::uint8_t _EMS_EWPLightSt,const std::uint8_t _EMS_EngFuelCutOff,const std::uint8_t _EMS_EngFuelCutOffStandby,const std::uint8_t _EMS_EngStrtReq,const std::uint8_t _EMS_EngStForPHEV,const std::uint8_t _EMS_FaultrankSig,const std::uint8_t _EMS_GPFSrvRgnReq,const std::uint8_t _EMS_GPFRgnSt,const std::uint8_t _EMS_IdlectrlActive,const std::uint8_t _EMS_InitFuelMode,const std::uint8_t _EMS_MaxSetTrq,const std::uint8_t _EMS_MinSetTrq,const std::uint8_t _EMS_StartEnd,const std::uint8_t _EMS_TEVDiagCondReq,const std::uint8_t _EMS_VCUHTMSWaterPumpSpdReq,const std::uint8_t _EMS_WarmupSt,const std::uint8_t _EMS_WarmCycleCnt,const std::uint8_t _EMS_PCVHSDCtrl,const std::uint8_t _EMS_PCVHSDCtrlVD,const std::uint8_t _EMS_HSDSTRLCtrlReq,const std::uint8_t _EMS_LIN1maxErr,const std::uint8_t _EMS_LINGENminErr,const std::uint8_t _EMS_LINGENsigErr):EMS_BattVoltVD(_EMS_BattVoltVD),EMS_BattVolt(_EMS_BattVolt),EMS_CatalyticIgnitionSt(_EMS_CatalyticIgnitionSt),EMS_ClutchTorqDriverReq(_EMS_ClutchTorqDriverReq),EMS_ClutchTorqDriverReqVD(_EMS_ClutchTorqDriverReqVD),EMS_DFCPcode(_EMS_DFCPcode),EMS_DFCPcodeSt(_EMS_DFCPcodeSt),EMS_DriverPowerReq(_EMS_DriverPowerReq),EMS_DriverPowerReqProtValue(_EMS_DriverPowerReqProtValue),EMS_DrvMode(_EMS_DrvMode),EMS_EngOilPres(_EMS_EngOilPres),EMS_EngIgnAngle(_EMS_EngIgnAngle),EMS_EngExhaustTemp(_EMS_EngExhaustTemp),EMS_EngCrankSt(_EMS_EngCrankSt),EMS_FuelRailPrVD(_EMS_FuelRailPrVD),EMS_FuelRailPr(_EMS_FuelRailPr),EMS_IUPRGenInh(_EMS_IUPRGenInh),EMS_IURPGenDen(_EMS_IURPGenDen),EMS_IUPRIgCnt(_EMS_IUPRIgCnt),EMS_IntakeMafldPres(_EMS_IntakeMafldPres),EMS_OBDDrivingCycleSt(_EMS_OBDDrivingCycleSt),EMS_MotronicSigRec(_EMS_MotronicSigRec),EMS_CatalystHeatingAct(_EMS_CatalystHeatingAct),EMS_EngRunningTime(_EMS_EngRunningTime),EMS_EWPLightSt(_EMS_EWPLightSt),EMS_EngFuelCutOff(_EMS_EngFuelCutOff),EMS_EngFuelCutOffStandby(_EMS_EngFuelCutOffStandby),EMS_EngStrtReq(_EMS_EngStrtReq),EMS_EngStForPHEV(_EMS_EngStForPHEV),EMS_FaultrankSig(_EMS_FaultrankSig),EMS_GPFSrvRgnReq(_EMS_GPFSrvRgnReq),EMS_GPFRgnSt(_EMS_GPFRgnSt),EMS_IdlectrlActive(_EMS_IdlectrlActive),EMS_InitFuelMode(_EMS_InitFuelMode),EMS_MaxSetTrq(_EMS_MaxSetTrq),EMS_MinSetTrq(_EMS_MinSetTrq),EMS_StartEnd(_EMS_StartEnd),EMS_TEVDiagCondReq(_EMS_TEVDiagCondReq),EMS_VCUHTMSWaterPumpSpdReq(_EMS_VCUHTMSWaterPumpSpdReq),EMS_WarmupSt(_EMS_WarmupSt),EMS_WarmCycleCnt(_EMS_WarmCycleCnt),EMS_PCVHSDCtrl(_EMS_PCVHSDCtrl),EMS_PCVHSDCtrlVD(_EMS_PCVHSDCtrlVD),EMS_HSDSTRLCtrlReq(_EMS_HSDSTRLCtrlReq),EMS_LIN1maxErr(_EMS_LIN1maxErr),EMS_LINGENminErr(_EMS_LINGENminErr),EMS_LINGENsigErr(_EMS_LINGENsigErr) {}
	BDCTestEMS1(const BDCTestEMS1 &_x){
		EMS_BattVoltVD = _x.EMS_BattVoltVD;
		EMS_BattVolt = _x.EMS_BattVolt;
		EMS_CatalyticIgnitionSt = _x.EMS_CatalyticIgnitionSt;
		EMS_ClutchTorqDriverReq = _x.EMS_ClutchTorqDriverReq;
		EMS_ClutchTorqDriverReqVD = _x.EMS_ClutchTorqDriverReqVD;
		EMS_DFCPcode = _x.EMS_DFCPcode;
		EMS_DFCPcodeSt = _x.EMS_DFCPcodeSt;
		EMS_DriverPowerReq = _x.EMS_DriverPowerReq;
		EMS_DriverPowerReqProtValue = _x.EMS_DriverPowerReqProtValue;
		EMS_DrvMode = _x.EMS_DrvMode;
		EMS_EngOilPres = _x.EMS_EngOilPres;
		EMS_EngIgnAngle = _x.EMS_EngIgnAngle;
		EMS_EngExhaustTemp = _x.EMS_EngExhaustTemp;
		EMS_EngCrankSt = _x.EMS_EngCrankSt;
		EMS_FuelRailPrVD = _x.EMS_FuelRailPrVD;
		EMS_FuelRailPr = _x.EMS_FuelRailPr;
		EMS_IUPRGenInh = _x.EMS_IUPRGenInh;
		EMS_IURPGenDen = _x.EMS_IURPGenDen;
		EMS_IUPRIgCnt = _x.EMS_IUPRIgCnt;
		EMS_IntakeMafldPres = _x.EMS_IntakeMafldPres;
		EMS_OBDDrivingCycleSt = _x.EMS_OBDDrivingCycleSt;
		EMS_MotronicSigRec = _x.EMS_MotronicSigRec;
		EMS_CatalystHeatingAct = _x.EMS_CatalystHeatingAct;
		EMS_EngRunningTime = _x.EMS_EngRunningTime;
		EMS_EWPLightSt = _x.EMS_EWPLightSt;
		EMS_EngFuelCutOff = _x.EMS_EngFuelCutOff;
		EMS_EngFuelCutOffStandby = _x.EMS_EngFuelCutOffStandby;
		EMS_EngStrtReq = _x.EMS_EngStrtReq;
		EMS_EngStForPHEV = _x.EMS_EngStForPHEV;
		EMS_FaultrankSig = _x.EMS_FaultrankSig;
		EMS_GPFSrvRgnReq = _x.EMS_GPFSrvRgnReq;
		EMS_GPFRgnSt = _x.EMS_GPFRgnSt;
		EMS_IdlectrlActive = _x.EMS_IdlectrlActive;
		EMS_InitFuelMode = _x.EMS_InitFuelMode;
		EMS_MaxSetTrq = _x.EMS_MaxSetTrq;
		EMS_MinSetTrq = _x.EMS_MinSetTrq;
		EMS_StartEnd = _x.EMS_StartEnd;
		EMS_TEVDiagCondReq = _x.EMS_TEVDiagCondReq;
		EMS_VCUHTMSWaterPumpSpdReq = _x.EMS_VCUHTMSWaterPumpSpdReq;
		EMS_WarmupSt = _x.EMS_WarmupSt;
		EMS_WarmCycleCnt = _x.EMS_WarmCycleCnt;
		EMS_PCVHSDCtrl = _x.EMS_PCVHSDCtrl;
		EMS_PCVHSDCtrlVD = _x.EMS_PCVHSDCtrlVD;
		EMS_HSDSTRLCtrlReq = _x.EMS_HSDSTRLCtrlReq;
		EMS_LIN1maxErr = _x.EMS_LIN1maxErr;
		EMS_LINGENminErr = _x.EMS_LINGENminErr;
		EMS_LINGENsigErr = _x.EMS_LINGENsigErr;
	}
	BDCTestEMS1(BDCTestEMS1 &&_x){
		EMS_BattVoltVD = std::move(_x.EMS_BattVoltVD);
		EMS_BattVolt = std::move(_x.EMS_BattVolt);
		EMS_CatalyticIgnitionSt = std::move(_x.EMS_CatalyticIgnitionSt);
		EMS_ClutchTorqDriverReq = std::move(_x.EMS_ClutchTorqDriverReq);
		EMS_ClutchTorqDriverReqVD = std::move(_x.EMS_ClutchTorqDriverReqVD);
		EMS_DFCPcode = std::move(_x.EMS_DFCPcode);
		EMS_DFCPcodeSt = std::move(_x.EMS_DFCPcodeSt);
		EMS_DriverPowerReq = std::move(_x.EMS_DriverPowerReq);
		EMS_DriverPowerReqProtValue = std::move(_x.EMS_DriverPowerReqProtValue);
		EMS_DrvMode = std::move(_x.EMS_DrvMode);
		EMS_EngOilPres = std::move(_x.EMS_EngOilPres);
		EMS_EngIgnAngle = std::move(_x.EMS_EngIgnAngle);
		EMS_EngExhaustTemp = std::move(_x.EMS_EngExhaustTemp);
		EMS_EngCrankSt = std::move(_x.EMS_EngCrankSt);
		EMS_FuelRailPrVD = std::move(_x.EMS_FuelRailPrVD);
		EMS_FuelRailPr = std::move(_x.EMS_FuelRailPr);
		EMS_IUPRGenInh = std::move(_x.EMS_IUPRGenInh);
		EMS_IURPGenDen = std::move(_x.EMS_IURPGenDen);
		EMS_IUPRIgCnt = std::move(_x.EMS_IUPRIgCnt);
		EMS_IntakeMafldPres = std::move(_x.EMS_IntakeMafldPres);
		EMS_OBDDrivingCycleSt = std::move(_x.EMS_OBDDrivingCycleSt);
		EMS_MotronicSigRec = std::move(_x.EMS_MotronicSigRec);
		EMS_CatalystHeatingAct = std::move(_x.EMS_CatalystHeatingAct);
		EMS_EngRunningTime = std::move(_x.EMS_EngRunningTime);
		EMS_EWPLightSt = std::move(_x.EMS_EWPLightSt);
		EMS_EngFuelCutOff = std::move(_x.EMS_EngFuelCutOff);
		EMS_EngFuelCutOffStandby = std::move(_x.EMS_EngFuelCutOffStandby);
		EMS_EngStrtReq = std::move(_x.EMS_EngStrtReq);
		EMS_EngStForPHEV = std::move(_x.EMS_EngStForPHEV);
		EMS_FaultrankSig = std::move(_x.EMS_FaultrankSig);
		EMS_GPFSrvRgnReq = std::move(_x.EMS_GPFSrvRgnReq);
		EMS_GPFRgnSt = std::move(_x.EMS_GPFRgnSt);
		EMS_IdlectrlActive = std::move(_x.EMS_IdlectrlActive);
		EMS_InitFuelMode = std::move(_x.EMS_InitFuelMode);
		EMS_MaxSetTrq = std::move(_x.EMS_MaxSetTrq);
		EMS_MinSetTrq = std::move(_x.EMS_MinSetTrq);
		EMS_StartEnd = std::move(_x.EMS_StartEnd);
		EMS_TEVDiagCondReq = std::move(_x.EMS_TEVDiagCondReq);
		EMS_VCUHTMSWaterPumpSpdReq = std::move(_x.EMS_VCUHTMSWaterPumpSpdReq);
		EMS_WarmupSt = std::move(_x.EMS_WarmupSt);
		EMS_WarmCycleCnt = std::move(_x.EMS_WarmCycleCnt);
		EMS_PCVHSDCtrl = std::move(_x.EMS_PCVHSDCtrl);
		EMS_PCVHSDCtrlVD = std::move(_x.EMS_PCVHSDCtrlVD);
		EMS_HSDSTRLCtrlReq = std::move(_x.EMS_HSDSTRLCtrlReq);
		EMS_LIN1maxErr = std::move(_x.EMS_LIN1maxErr);
		EMS_LINGENminErr = std::move(_x.EMS_LINGENminErr);
		EMS_LINGENsigErr = std::move(_x.EMS_LINGENsigErr);
	}
	BDCTestEMS1& operator=(const BDCTestEMS1 &_x){
		EMS_BattVoltVD = _x.EMS_BattVoltVD;
		EMS_BattVolt = _x.EMS_BattVolt;
		EMS_CatalyticIgnitionSt = _x.EMS_CatalyticIgnitionSt;
		EMS_ClutchTorqDriverReq = _x.EMS_ClutchTorqDriverReq;
		EMS_ClutchTorqDriverReqVD = _x.EMS_ClutchTorqDriverReqVD;
		EMS_DFCPcode = _x.EMS_DFCPcode;
		EMS_DFCPcodeSt = _x.EMS_DFCPcodeSt;
		EMS_DriverPowerReq = _x.EMS_DriverPowerReq;
		EMS_DriverPowerReqProtValue = _x.EMS_DriverPowerReqProtValue;
		EMS_DrvMode = _x.EMS_DrvMode;
		EMS_EngOilPres = _x.EMS_EngOilPres;
		EMS_EngIgnAngle = _x.EMS_EngIgnAngle;
		EMS_EngExhaustTemp = _x.EMS_EngExhaustTemp;
		EMS_EngCrankSt = _x.EMS_EngCrankSt;
		EMS_FuelRailPrVD = _x.EMS_FuelRailPrVD;
		EMS_FuelRailPr = _x.EMS_FuelRailPr;
		EMS_IUPRGenInh = _x.EMS_IUPRGenInh;
		EMS_IURPGenDen = _x.EMS_IURPGenDen;
		EMS_IUPRIgCnt = _x.EMS_IUPRIgCnt;
		EMS_IntakeMafldPres = _x.EMS_IntakeMafldPres;
		EMS_OBDDrivingCycleSt = _x.EMS_OBDDrivingCycleSt;
		EMS_MotronicSigRec = _x.EMS_MotronicSigRec;
		EMS_CatalystHeatingAct = _x.EMS_CatalystHeatingAct;
		EMS_EngRunningTime = _x.EMS_EngRunningTime;
		EMS_EWPLightSt = _x.EMS_EWPLightSt;
		EMS_EngFuelCutOff = _x.EMS_EngFuelCutOff;
		EMS_EngFuelCutOffStandby = _x.EMS_EngFuelCutOffStandby;
		EMS_EngStrtReq = _x.EMS_EngStrtReq;
		EMS_EngStForPHEV = _x.EMS_EngStForPHEV;
		EMS_FaultrankSig = _x.EMS_FaultrankSig;
		EMS_GPFSrvRgnReq = _x.EMS_GPFSrvRgnReq;
		EMS_GPFRgnSt = _x.EMS_GPFRgnSt;
		EMS_IdlectrlActive = _x.EMS_IdlectrlActive;
		EMS_InitFuelMode = _x.EMS_InitFuelMode;
		EMS_MaxSetTrq = _x.EMS_MaxSetTrq;
		EMS_MinSetTrq = _x.EMS_MinSetTrq;
		EMS_StartEnd = _x.EMS_StartEnd;
		EMS_TEVDiagCondReq = _x.EMS_TEVDiagCondReq;
		EMS_VCUHTMSWaterPumpSpdReq = _x.EMS_VCUHTMSWaterPumpSpdReq;
		EMS_WarmupSt = _x.EMS_WarmupSt;
		EMS_WarmCycleCnt = _x.EMS_WarmCycleCnt;
		EMS_PCVHSDCtrl = _x.EMS_PCVHSDCtrl;
		EMS_PCVHSDCtrlVD = _x.EMS_PCVHSDCtrlVD;
		EMS_HSDSTRLCtrlReq = _x.EMS_HSDSTRLCtrlReq;
		EMS_LIN1maxErr = _x.EMS_LIN1maxErr;
		EMS_LINGENminErr = _x.EMS_LINGENminErr;
		EMS_LINGENsigErr = _x.EMS_LINGENsigErr;
		return *this;
	}
	BDCTestEMS1& operator=(BDCTestEMS1 &&_x){
		EMS_BattVoltVD = std::move(_x.EMS_BattVoltVD);
		EMS_BattVolt = std::move(_x.EMS_BattVolt);
		EMS_CatalyticIgnitionSt = std::move(_x.EMS_CatalyticIgnitionSt);
		EMS_ClutchTorqDriverReq = std::move(_x.EMS_ClutchTorqDriverReq);
		EMS_ClutchTorqDriverReqVD = std::move(_x.EMS_ClutchTorqDriverReqVD);
		EMS_DFCPcode = std::move(_x.EMS_DFCPcode);
		EMS_DFCPcodeSt = std::move(_x.EMS_DFCPcodeSt);
		EMS_DriverPowerReq = std::move(_x.EMS_DriverPowerReq);
		EMS_DriverPowerReqProtValue = std::move(_x.EMS_DriverPowerReqProtValue);
		EMS_DrvMode = std::move(_x.EMS_DrvMode);
		EMS_EngOilPres = std::move(_x.EMS_EngOilPres);
		EMS_EngIgnAngle = std::move(_x.EMS_EngIgnAngle);
		EMS_EngExhaustTemp = std::move(_x.EMS_EngExhaustTemp);
		EMS_EngCrankSt = std::move(_x.EMS_EngCrankSt);
		EMS_FuelRailPrVD = std::move(_x.EMS_FuelRailPrVD);
		EMS_FuelRailPr = std::move(_x.EMS_FuelRailPr);
		EMS_IUPRGenInh = std::move(_x.EMS_IUPRGenInh);
		EMS_IURPGenDen = std::move(_x.EMS_IURPGenDen);
		EMS_IUPRIgCnt = std::move(_x.EMS_IUPRIgCnt);
		EMS_IntakeMafldPres = std::move(_x.EMS_IntakeMafldPres);
		EMS_OBDDrivingCycleSt = std::move(_x.EMS_OBDDrivingCycleSt);
		EMS_MotronicSigRec = std::move(_x.EMS_MotronicSigRec);
		EMS_CatalystHeatingAct = std::move(_x.EMS_CatalystHeatingAct);
		EMS_EngRunningTime = std::move(_x.EMS_EngRunningTime);
		EMS_EWPLightSt = std::move(_x.EMS_EWPLightSt);
		EMS_EngFuelCutOff = std::move(_x.EMS_EngFuelCutOff);
		EMS_EngFuelCutOffStandby = std::move(_x.EMS_EngFuelCutOffStandby);
		EMS_EngStrtReq = std::move(_x.EMS_EngStrtReq);
		EMS_EngStForPHEV = std::move(_x.EMS_EngStForPHEV);
		EMS_FaultrankSig = std::move(_x.EMS_FaultrankSig);
		EMS_GPFSrvRgnReq = std::move(_x.EMS_GPFSrvRgnReq);
		EMS_GPFRgnSt = std::move(_x.EMS_GPFRgnSt);
		EMS_IdlectrlActive = std::move(_x.EMS_IdlectrlActive);
		EMS_InitFuelMode = std::move(_x.EMS_InitFuelMode);
		EMS_MaxSetTrq = std::move(_x.EMS_MaxSetTrq);
		EMS_MinSetTrq = std::move(_x.EMS_MinSetTrq);
		EMS_StartEnd = std::move(_x.EMS_StartEnd);
		EMS_TEVDiagCondReq = std::move(_x.EMS_TEVDiagCondReq);
		EMS_VCUHTMSWaterPumpSpdReq = std::move(_x.EMS_VCUHTMSWaterPumpSpdReq);
		EMS_WarmupSt = std::move(_x.EMS_WarmupSt);
		EMS_WarmCycleCnt = std::move(_x.EMS_WarmCycleCnt);
		EMS_PCVHSDCtrl = std::move(_x.EMS_PCVHSDCtrl);
		EMS_PCVHSDCtrlVD = std::move(_x.EMS_PCVHSDCtrlVD);
		EMS_HSDSTRLCtrlReq = std::move(_x.EMS_HSDSTRLCtrlReq);
		EMS_LIN1maxErr = std::move(_x.EMS_LIN1maxErr);
		EMS_LINGENminErr = std::move(_x.EMS_LINGENminErr);
		EMS_LINGENsigErr = std::move(_x.EMS_LINGENsigErr);
		return *this;
	}
*/

	using IsEnumerableTag = void;
	template<typename F>
	void enumerate(F& fun) {
		fun(EMS_BattVoltVD);
		fun(EMS_BattVolt);
		fun(EMS_CatalyticIgnitionSt);
		fun(EMS_ClutchTorqDriverReq);
		fun(EMS_ClutchTorqDriverReqVD);
		fun(EMS_DFCPcode);
		fun(EMS_DFCPcodeSt);
		fun(EMS_DriverPowerReq);
		fun(EMS_DriverPowerReqProtValue);
		fun(EMS_DrvMode);
		fun(EMS_EngOilPres);
		fun(EMS_EngIgnAngle);
		fun(EMS_EngExhaustTemp);
		fun(EMS_EngCrankSt);
		fun(EMS_FuelRailPrVD);
		fun(EMS_FuelRailPr);
		fun(EMS_IUPRGenInh);
		fun(EMS_IURPGenDen);
		fun(EMS_IUPRIgCnt);
		fun(EMS_IntakeMafldPres);
		fun(EMS_OBDDrivingCycleSt);
		fun(EMS_MotronicSigRec);
		fun(EMS_CatalystHeatingAct);
		fun(EMS_EngRunningTime);
		fun(EMS_EWPLightSt);
		fun(EMS_EngFuelCutOff);
		fun(EMS_EngFuelCutOffStandby);
		fun(EMS_EngStrtReq);
		fun(EMS_EngStForPHEV);
		fun(EMS_FaultrankSig);
		fun(EMS_GPFSrvRgnReq);
		fun(EMS_GPFRgnSt);
		fun(EMS_IdlectrlActive);
		fun(EMS_InitFuelMode);
		fun(EMS_MaxSetTrq);
		fun(EMS_MinSetTrq);
		fun(EMS_StartEnd);
		fun(EMS_TEVDiagCondReq);
		fun(EMS_VCUHTMSWaterPumpSpdReq);
		fun(EMS_WarmupSt);
		fun(EMS_WarmCycleCnt);
		fun(EMS_PCVHSDCtrl);
		fun(EMS_PCVHSDCtrlVD);
		fun(EMS_HSDSTRLCtrlReq);
		fun(EMS_LIN1maxErr);
		fun(EMS_LINGENminErr);
		fun(EMS_LINGENsigErr);
	}

	template<typename F>
	void GetSize(F& fun) const{
		fun(EMS_BattVoltVD);
		fun(EMS_BattVolt);
		fun(EMS_CatalyticIgnitionSt);
		fun(EMS_ClutchTorqDriverReq);
		fun(EMS_ClutchTorqDriverReqVD);
		fun(EMS_DFCPcode);
		fun(EMS_DFCPcodeSt);
		fun(EMS_DriverPowerReq);
		fun(EMS_DriverPowerReqProtValue);
		fun(EMS_DrvMode);
		fun(EMS_EngOilPres);
		fun(EMS_EngIgnAngle);
		fun(EMS_EngExhaustTemp);
		fun(EMS_EngCrankSt);
		fun(EMS_FuelRailPrVD);
		fun(EMS_FuelRailPr);
		fun(EMS_IUPRGenInh);
		fun(EMS_IURPGenDen);
		fun(EMS_IUPRIgCnt);
		fun(EMS_IntakeMafldPres);
		fun(EMS_OBDDrivingCycleSt);
		fun(EMS_MotronicSigRec);
		fun(EMS_CatalystHeatingAct);
		fun(EMS_EngRunningTime);
		fun(EMS_EWPLightSt);
		fun(EMS_EngFuelCutOff);
		fun(EMS_EngFuelCutOffStandby);
		fun(EMS_EngStrtReq);
		fun(EMS_EngStForPHEV);
		fun(EMS_FaultrankSig);
		fun(EMS_GPFSrvRgnReq);
		fun(EMS_GPFRgnSt);
		fun(EMS_IdlectrlActive);
		fun(EMS_InitFuelMode);
		fun(EMS_MaxSetTrq);
		fun(EMS_MinSetTrq);
		fun(EMS_StartEnd);
		fun(EMS_TEVDiagCondReq);
		fun(EMS_VCUHTMSWaterPumpSpdReq);
		fun(EMS_WarmupSt);
		fun(EMS_WarmCycleCnt);
		fun(EMS_PCVHSDCtrl);
		fun(EMS_PCVHSDCtrlVD);
		fun(EMS_HSDSTRLCtrlReq);
		fun(EMS_LIN1maxErr);
		fun(EMS_LINGENminErr);
		fun(EMS_LINGENsigErr);
	}
	template<typename F>
	void serialize(F& fun) const{
		fun << (EMS_BattVoltVD);
		fun << (EMS_BattVolt);
		fun << (EMS_CatalyticIgnitionSt);
		fun << (EMS_ClutchTorqDriverReq);
		fun << (EMS_ClutchTorqDriverReqVD);
		fun << (EMS_DFCPcode);
		fun << (EMS_DFCPcodeSt);
		fun << (EMS_DriverPowerReq);
		fun << (EMS_DriverPowerReqProtValue);
		fun << (EMS_DrvMode);
		fun << (EMS_EngOilPres);
		fun << (EMS_EngIgnAngle);
		fun << (EMS_EngExhaustTemp);
		fun << (EMS_EngCrankSt);
		fun << (EMS_FuelRailPrVD);
		fun << (EMS_FuelRailPr);
		fun << (EMS_IUPRGenInh);
		fun << (EMS_IURPGenDen);
		fun << (EMS_IUPRIgCnt);
		fun << (EMS_IntakeMafldPres);
		fun << (EMS_OBDDrivingCycleSt);
		fun << (EMS_MotronicSigRec);
		fun << (EMS_CatalystHeatingAct);
		fun << (EMS_EngRunningTime);
		fun << (EMS_EWPLightSt);
		fun << (EMS_EngFuelCutOff);
		fun << (EMS_EngFuelCutOffStandby);
		fun << (EMS_EngStrtReq);
		fun << (EMS_EngStForPHEV);
		fun << (EMS_FaultrankSig);
		fun << (EMS_GPFSrvRgnReq);
		fun << (EMS_GPFRgnSt);
		fun << (EMS_IdlectrlActive);
		fun << (EMS_InitFuelMode);
		fun << (EMS_MaxSetTrq);
		fun << (EMS_MinSetTrq);
		fun << (EMS_StartEnd);
		fun << (EMS_TEVDiagCondReq);
		fun << (EMS_VCUHTMSWaterPumpSpdReq);
		fun << (EMS_WarmupSt);
		fun << (EMS_WarmCycleCnt);
		fun << (EMS_PCVHSDCtrl);
		fun << (EMS_PCVHSDCtrlVD);
		fun << (EMS_HSDSTRLCtrlReq);
		fun << (EMS_LIN1maxErr);
		fun << (EMS_LINGENminErr);
		fun << (EMS_LINGENsigErr);
	}
	template<typename F>
	void deserialize(F& fun){
		fun >> (EMS_BattVoltVD);
		fun >> (EMS_BattVolt);
		fun >> (EMS_CatalyticIgnitionSt);
		fun >> (EMS_ClutchTorqDriverReq);
		fun >> (EMS_ClutchTorqDriverReqVD);
		fun >> (EMS_DFCPcode);
		fun >> (EMS_DFCPcodeSt);
		fun >> (EMS_DriverPowerReq);
		fun >> (EMS_DriverPowerReqProtValue);
		fun >> (EMS_DrvMode);
		fun >> (EMS_EngOilPres);
		fun >> (EMS_EngIgnAngle);
		fun >> (EMS_EngExhaustTemp);
		fun >> (EMS_EngCrankSt);
		fun >> (EMS_FuelRailPrVD);
		fun >> (EMS_FuelRailPr);
		fun >> (EMS_IUPRGenInh);
		fun >> (EMS_IURPGenDen);
		fun >> (EMS_IUPRIgCnt);
		fun >> (EMS_IntakeMafldPres);
		fun >> (EMS_OBDDrivingCycleSt);
		fun >> (EMS_MotronicSigRec);
		fun >> (EMS_CatalystHeatingAct);
		fun >> (EMS_EngRunningTime);
		fun >> (EMS_EWPLightSt);
		fun >> (EMS_EngFuelCutOff);
		fun >> (EMS_EngFuelCutOffStandby);
		fun >> (EMS_EngStrtReq);
		fun >> (EMS_EngStForPHEV);
		fun >> (EMS_FaultrankSig);
		fun >> (EMS_GPFSrvRgnReq);
		fun >> (EMS_GPFRgnSt);
		fun >> (EMS_IdlectrlActive);
		fun >> (EMS_InitFuelMode);
		fun >> (EMS_MaxSetTrq);
		fun >> (EMS_MinSetTrq);
		fun >> (EMS_StartEnd);
		fun >> (EMS_TEVDiagCondReq);
		fun >> (EMS_VCUHTMSWaterPumpSpdReq);
		fun >> (EMS_WarmupSt);
		fun >> (EMS_WarmCycleCnt);
		fun >> (EMS_PCVHSDCtrl);
		fun >> (EMS_PCVHSDCtrlVD);
		fun >> (EMS_HSDSTRLCtrlReq);
		fun >> (EMS_LIN1maxErr);
		fun >> (EMS_LINGENminErr);
		fun >> (EMS_LINGENsigErr);
	}
};

#endif //____BDCTESTEMS1_H__
